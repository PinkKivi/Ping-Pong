#connecting modules
from pygame import *
import pygame
from pygame.font import *

#window settings
FPS = 60
clock = pygame.time.Clock()
window = display.set_mode((700,500))
display.set_caption('Ping-pong')

#font settings
font.init()
font = font.Font(None, 35)
win = font.render('PLAYER_1 WIN!', True, (255, 255, 255))
lose = font.render('PLAYER_2 WIN!', True, (255, 255, 255))

#classes
class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed, size_x, size_y):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update_1(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_pressed[K_s] and self.rect.y < 300:
            self.rect.y += self.speed
    def update_2(self):
        keys_pressed = key.get_pressed()
        if keys_pressed[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys_pressed[K_DOWN] and self.rect.y < 300:
            self.rect.y += self.speed
    
#class Ball(GameSprite):


#sprites
player_1 = Player('Line.png',-200,150,5,500,200)
player_2 = Player('Line.png',400,150,5,500,200)
ball = GameSprite('Ball.png',200,200,3,100,100)

speed_x = 3
speed_y = 3

#game
background = transform.scale(image.load('Tennis_court.jpg'), (700, 500))
game = True
finish = False

while game:
    for e in event.get():
        if e.type == QUIT:  
            game = False

    if finish != True:
        keys_pressed = key.get_pressed()
        window.blit(background,(0,0))  
        player_1.reset()
        player_1.update_1()
        player_2.reset()
        player_2.update_2()
        ball.reset()
        
        ball.rect.x += speed_x
        ball.rect.y += speed_y
    
    if ball.rect.y > 400 or ball.rect.y < 0:
        speed_y *= -1

    if sprite.collide_rect(player_1,ball) or sprite.collide_rect(player_2, ball):
        speed_x *= -1

    clock.tick(FPS)
    display.update()
